
name: Deploy project
on: 
    push:
        branches:
            - main

    workflow_dispatch:
        

jobs:
  test: 
    runs-on: ubuntu-latest
    
    steps:
        - name: Git Code
          uses: actions/checkout@v3

        - name: Install NodeJS
          uses: actions/setup-node@v3
          with: 
            node-version: '20'
        
        - name: Cache Dependencies
          uses: actions/cache@v3
          with:
            path: ~/.npm
            key:  deps-node-modules-${{ '**/package-lock.json' }}  
          
        - name: Install Dependencies
          run:  npm ci

        - name: Run tests
          run:  npm test
          

  build:   
    needs: test 
    runs-on: ubuntu-latest          
    outputs: 
      script-file: ${{ steps.publish.outputs.script-file }}

    steps:    
         - name: Git Code
           uses: actions/checkout@v3
        
         - name: Install NodeJS
           uses: actions/setup-node@v3
           with: 
                node-version: '20'
          
         - name: Cache Dependencies
           uses: actions/cache@v3
           with:
            path: ~/.npm
            key:  deps-node-modules-${{ hashFiles('**/package-lock.json') }}  

         - name: Install Dependencies
           run:  npm ci 
        
         - name: Build project
           run:  npm run build

         - name: Publish JS filename
           id:   publish
           run:  find dist/assets/*.js -type f -execdir echo 'script-file={}' >> $GITHUB_OUTPUT ';'      

         - name: Upload Artifacts
           uses: actions/upload-artifact@v4
           with:
              name: dist-files
              path: dist
                  
    

  deploy:   
    needs: build 
    runs-on: ubuntu-latest          
            
    steps:    
         - name: Git Code
           uses: actions/checkout@v3
        
         - name: Get Artifacts
           uses: actions/download-artifact@v4
           with:
              name: dist-files

         - name: List Output Contents 
           run:  ls

         - name: Output Filename
          run:   echo "${{ needs.build.outputs.script-file }}" 
                  
         - name: Deploy
           run:  echo "Deploying....."

        


